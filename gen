#!/usr/bin/env bash

strington() {
  case "$1" in
  one)          echo 1;;
  two)          echo 2;;
  three)        echo 3;;
  four)         echo 4;;
  five)         echo 5;;
  six)          echo 6;;
  seven)        echo 7;;
  eight)        echo 8;;
  nine)         echo 9;;
  ten)          echo 10;;
  eleven)       echo 11;;
  twelve)       echo 12;;
  thirteen)     echo 13;;
  fourteen)     echo 14;;
  fifteen)      echo 15;;
  sixteen)      echo 16;;
  seventeen)    echo 17;;
  eighteen)     echo 18;;
  nineteen)     echo 19;;
  twenty)       echo 20;;
  twentyone)    echo 21;;
  twentytwo)    echo 22;;
  twentythree)  echo 23;;
  twentyfour)   echo 24;;
  twentyfive)   echo 25;;
  twentysix)    echo 26;;
  twentyseven)  echo 27;;
  twentyeight)  echo 28;;
  twentynine)   echo 29;;
  thirty)       echo 30;;
  esac
}

set -x

if [[ -z "$1" ]]; then
  >&2 echo "Usage: [year] <day>"
  exit 1
fi

if [[ -z "$2" ]]; then
  YEAR=twentytwo
  DAY="$1"
else
  YEAR="$1"
  DAY="$2"
fi

if ! grep -q "object $YEAR " build.sc; then
  >&2 echo "First, set up module for year $YEAR"
  exit 2
fi

LOC="$YEAR"/"$DAY"/src/"$YEAR"/"$DAY"

mkdir -p "$LOC"
scalafile="$LOC/${YEAR^}${DAY^}".scala
if [[ -f $scalafile ]]; then
  >&2 echo "$scalafile" already exists, skipping...
else
  > "$scalafile" cat <<EOF
package $YEAR.$DAY

import lib.Support

object ${YEAR^}${DAY^} extends App with Support {
  val testData =
    """
      |hello world
      |""".stripMargin.trim
  val input = load

  def run(data: String) = {
    val in = stringSeq(data)

    val p1 = in.head
    println(p1)

    // val p2 = in.last
    // println(p2)
  }

  println("--- testdata ---")
  run(testData)
  println("--- real ---")
  run(input)
}
EOF
fi

mkdir -p "$YEAR"/"$DAY"/resources
inputfile="$YEAR"/"$DAY"/resources/input.txt
if [[ -f "$inputfile" ]]; then
  >&2 echo "$inputfile" already exists, skipping...
else
  touch "$inputfile"
  curl -fLso "$inputfile" -b advent-cookie-jar.txt "https://adventofcode.com/20$(strington "$YEAR")/day/$(strington "$DAY")/input"
fi

if >/dev/null mill resolve "$YEAR"."$DAY" 2>&1; then
  >&2 echo project config exists, skipping...
else
  gawk \
    -i inplace -v \
    x="  object $DAY extends ScalaModule with Common" \
    "/object[[:space:]]+$YEAR"'([[:space:]]|[[:alnum:]])+\{/{f=1} !/}/{print} /}/{if (f) print x; print "}"; f=0}' \
    build.sc
fi

./idea

mill -w "$YEAR.$DAY.run"
